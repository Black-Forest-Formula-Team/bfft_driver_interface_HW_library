/*
 * CANDispatcher.c
 *
 *  Created on: 04.08.2021
 *      Author: maanm
 */

#include "main.h"
static bool bDispatchToDisplay(const eCANSubscriberType_t ceCANSubscriberType, const uint8_t * cpu8Data, const uint8_t cu8DataLength);
static uint8_t au8MessageBuffer[8u];

bool bDispatchMessage(void)
{


  if(HAL_OK != HAL_FDCAN_GetRxMessage(&hfdcan1, FDCAN_RX_FIFO0, &xCANRxHeader, au8MessageBuffer))
     return false;

  const uint32_t cu32MessageId = u32CAN_GetMessageId();

  for(uint8_t index = 0u; index < BUFFER_SIZE; index++)
  {
     if((NULL != apsVecCANSubscriber[index]) && (NULL != apsVecCANSubscriber[index]->psCANID))
     {
         if(cu32MessageId == apsVecCANSubscriber[index]->psCANID->_priv._u32CAN_STDID)
         {
           return bDispatchToDiplay(apsVecCANSubscriber[index]->_Priv.eCANSubcriberType, au8MessageBuffer, xCANRxHeader.DataLength);
         }
     }
  }

}


bool bDispatchToDisplay(const eCANSubscriberType_t ceCANSubscriberType, const uint8_t * cpu8Data, const uint8_t cu8DataLength)
{

}
